1. npm init -y
2. npm i express mongoose ejs
3. 
mkdir views
touch home.ejs

(ctrl+s)

4. 
cd ..
touch app.js

const express = require('express');
const app = express();
const path = require('path');

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'))

app.get('/',(req,res) => {
    res.render('home')
})

app.listen(3000, ()=>{
    console.log('Serving on port 3000')
})

(ctrl+s)

5.
mkdir models
touch campground.js

const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const CampgroundSchema = new Schema({
    title: String,
    Price: String,
    description: String,
    location: String
});

module.export = mongoose.model('Campground',CampgroundSchema)


6.
npm i method-override
const methodOverride = require('method-override');
app.use(methodOverride('_method'))

7.
npm i morgan

const morgan = require('morgan');

8.
npm i ejs-mate

const ejsMate = require('ejs-mate');

app.engine('ejs', ejsMate)


9.(course433)
touch index.js (in the same folder)

class AppError extends Error {
    constructor(message, status){
        super();
        this.message = message;
        this.status = status;

    }
}

module.exports = AppError;

(back in main js)
const AppError = require('./AppError')

function wrapAsync(fn){
    return function(req, res, next){
        fn(req, res, next).catch(e => next(e))
    }
}



app.use((err, req, res, next)=>{
    const { status = 500, message = 'something went wrong' } = err;
    // here i give default value to the destruction
    res.status(status).send(message)
})